<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>windows系统激活</title>
      <link href="/2025/08/13/windows%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB/"/>
      <url>/2025/08/13/windows%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="windows系统激活"><a href="#windows系统激活" class="headerlink" title="windows系统激活"></a>windows系统激活</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /skms kms.loli.best</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows相关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀低价VPS照样飞！低价VPS + Cloudflare 高速节点搭建全攻略</title>
      <link href="/2025/07/01/2025-07-01-VPS-Cloudflare/"/>
      <url>/2025/07/01/2025-07-01-VPS-Cloudflare/</url>
      
        <content type="html"><![CDATA[<h1 id="低价VPS优化教程：几块钱的NAT-VPS也能跑得飞快！"><a href="#低价VPS优化教程：几块钱的NAT-VPS也能跑得飞快！" class="headerlink" title="低价VPS优化教程：几块钱的NAT VPS也能跑得飞快！"></a>低价VPS优化教程：几块钱的NAT VPS也能跑得飞快！</h1><p>大家好，欢迎来到本期视频！👋 </p><p>近期有不少粉丝私信问我：</p><ul><li>💬 “那些几块钱的NAT VPS、烂线路机器还有救吗？”</li><li>💬 “买不起大厂高端线路，还有什么优化技巧？”</li></ul><p>今天我就来告诉你：<strong>低价VPS一样可以跑得飞快！</strong> 只要你按照我本期教学一步步来操作，不用 Hysteria2、也不用去买贵价大鸡，高速节点照样能实现！</p><h2 id="🧩-为什么不用-Hysteria2？"><a href="#🧩-为什么不用-Hysteria2？" class="headerlink" title="🧩 为什么不用 Hysteria2？"></a>🧩 为什么不用 Hysteria2？</h2><p>虽然HY2协议很火，但我不推荐新手使用，原因如下：</p><ul><li>🚫 容易被滥用，导致暴力发包</li><li>🔒 很多服务商直接封机器，以为你在搞DDoS</li><li>🧱 被墙几率高，封锁后无法恢复</li></ul><p>因此，我们本期使用更稳妥、兼容性更强的方案：</p><ul><li>✅ VMESS+WS+TLS 或</li><li>✅ VLESS+XHTTP+Trojan</li></ul><h2 id="🖥️-第一步：选择合适的-VPS"><a href="#🖥️-第一步：选择合适的-VPS" class="headerlink" title="🖥️ 第一步：选择合适的 VPS"></a>🖥️ 第一步：选择合适的 VPS</h2><p>你需要先准备一台低价VPS。我个人推荐这款来自<a href="https://cloud.colocrossing.com/aff.php?aff=1094">CCS（ColoCrossing）</a>的方案：</p><p><strong>配置详情：</strong></p><ul><li>🌐 洛杉矶机房（延迟低，稳定性好）</li><li>🧠 配置：1 核心 &#x2F; 1G 内存 &#x2F; 25G SSD &#x2F; 20TB 流量</li><li>💰 仅需 $10&#x2F;年！</li></ul><p>🧾 <strong>为什么选它？</strong> ColoCrossing 是自建机房，流量20T，这也是很多人选择它的原因！</p><h2 id="🛠️-第二步：安装面板-创建节点"><a href="#🛠️-第二步：安装面板-创建节点" class="headerlink" title="🛠️ 第二步：安装面板 + 创建节点"></a>🛠️ 第二步：安装面板 + 创建节点</h2><h3 id="🔧-安装-X-UI-面板"><a href="#🔧-安装-X-UI-面板" class="headerlink" title="🔧 安装 X-UI 面板"></a>🔧 安装 X-UI 面板</h3><p>首先连接 VPS 后安装 X-UI 面板：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><p>安装完成后，创建节点：</p><ul><li>推荐使用 <strong>VMESS + WS</strong> 协议，后续再加 TLS</li></ul><p>⚠️ <strong>注意事项：</strong></p><ul><li>不要占用 443 或 80 端口，避免影响建站、图床等服务</li><li>后期支持 TLS 加密，更安全！</li></ul><p>🌐 节点搭建完成后，导入 v2rayN 测试直连速度。如果你发现速度一般，那就进入下一步：优化！</p><h2 id="🌩️-第三步：Cloudflare-优化线路（提升速度）"><a href="#🌩️-第三步：Cloudflare-优化线路（提升速度）" class="headerlink" title="🌩️ 第三步：Cloudflare 优化线路（提升速度）"></a>🌩️ 第三步：Cloudflare 优化线路（提升速度）</h2><h3 id="1️⃣-准备域名"><a href="#1️⃣-准备域名" class="headerlink" title="1️⃣ 准备域名"></a>1️⃣ 准备域名</h3><ul><li>新建一个二级域名并指向你的 VPS</li><li>开启小云朵 ☁️ 以便接入 CF 加速</li></ul><h3 id="2️⃣-获取并安装-SSL-证书"><a href="#2️⃣-获取并安装-SSL-证书" class="headerlink" title="2️⃣ 获取并安装 SSL 证书"></a>2️⃣ 获取并安装 SSL 证书</h3><p>在 SSH 中输入 <code>x-ui</code>，进入面板后创建 SSL：</p><ul><li>填写：域名 + CF 邮箱 + API Key（在概览页获取）</li></ul><p><strong>证书文件路径：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/root/.acme.sh/yourdomain.com/yourdomain.com.cer</span><br><span class="line">/root/.acme.sh/yourdomain.com/yourdomain.com.key</span><br></pre></td></tr></table></figure><p>在 X-UI 面板中启用 TLS，并填入证书路径。</p><h3 id="3️⃣-配置-CF-Origin-Rules（实现隐藏真实端口）"><a href="#3️⃣-配置-CF-Origin-Rules（实现隐藏真实端口）" class="headerlink" title="3️⃣ 配置 CF Origin Rules（实现隐藏真实端口）"></a>3️⃣ 配置 CF Origin Rules（实现隐藏真实端口）</h3><p>📌 <strong>路径：</strong> Cloudflare &gt; 规则 &gt; 原始主机规则</p><p><strong>配置如下：</strong><br><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMfaIJD9x2RvryBh1C_wy-SUnjLzywAAq7JMRveNRBQxQ2opVF4UBIBAAMCAAN3AAM2BA.png"> </p><ul><li><strong>匹配条件：</strong> 主机名 &#x3D; 你的二级域名</li><li><strong>操作：</strong> 重写目标端口为节点端口（非443）</li></ul><h3 id="🎯-修改-v2ray-节点设置"><a href="#🎯-修改-v2ray-节点设置" class="headerlink" title="🎯 修改 v2ray 节点设置"></a>🎯 修改 v2ray 节点设置</h3><ul><li><strong>地址：</strong> 填你的 CF 二级域名</li><li><strong>端口：</strong> 443</li><li><strong>TLS + 伪装域名：</strong> 你的域名</li><li><strong>TLS SNI：</strong> 你的域名</li></ul><p><strong>这样做的好处：</strong></p><ul><li>✅ 可使用优选 IP 进行线路提速</li><li>✅ 避免 VPS 实际 IP 暴露，降低被墙风险</li></ul><h2 id="🌐-第四步：使用-CF-优选-IP-提升速度"><a href="#🌐-第四步：使用-CF-优选-IP-提升速度" class="headerlink" title="🌐 第四步：使用 CF 优选 IP 提升速度"></a>🌐 第四步：使用 CF 优选 IP 提升速度</h2><p>你可以替换 v2ray 节点中的”地址”为以下优选域名或解析出的 IP：</p><p>📌 可通过 <a href="https://ipchaxun.com/">https://ipchaxun.com/</a> 查询域名解析结果，也可以手动替换成优选 IP 使用。</p><h3 id="🔍-优选域名推荐"><a href="#🔍-优选域名推荐" class="headerlink" title="🔍 优选域名推荐"></a>🔍 优选域名推荐</h3><table><thead><tr><th>域名</th><th>描述</th></tr></thead><tbody><tr><td>proxyip.hk.cmliussss.net</td><td>香港线路</td></tr><tr><td>bj.fgfw.eu.org</td><td>北京优化</td></tr><tr><td>ali.055500.xyz</td><td>阿里云方向</td></tr><tr><td>oss-v2-cdn.fuukir.cn</td><td>内容分发专用</td></tr><tr><td>proxyip.hk.fxxk.dedyn.io</td><td>动态线路</td></tr><tr><td>yxip.now.cc</td><td>高速共享IP</td></tr><tr><td>supplierportal.qad.com</td><td>企业级高速CDN</td></tr><tr><td>ooly.cc</td><td>科技站点优化优选IP</td></tr></tbody></table><h2 id="🧪-附：VPS-测速结果参考"><a href="#🧪-附：VPS-测速结果参考" class="headerlink" title="🧪 附：VPS 测速结果参考"></a>🧪 附：VPS 测速结果参考</h2><p>你可以参考我使用的 VPS 测速效果：<br>📊 <strong>测速报告直达链接</strong></p><p>测试包含延迟、抖动、上传、下载等综合指标。</p><h2 id="🏁-总结"><a href="#🏁-总结" class="headerlink" title="🏁 总结"></a>🏁 总结</h2><p>📌 即使是便宜的 VPS，只要配置合理 + Cloudflare 优化，速度一样很棒！</p><p>📌 本期完全避开了 Hysteria2，使用更稳妥的方法实现节点加速！</p><p>📌 提供可落地的配置、优选IP、线路调优策略，确保低成本、高性能！</p><hr><p>如果你觉得这期内容有帮助，不妨点赞👍、收藏📂、关注我🔔！</p><p>更多 VPS、机场、科学上网相关教程，我们下期再见～👋</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Pages + PicGo + Typora + 自定义域名搭建免费图床</title>
      <link href="/2024/12/08/2024-12-08-picgo/"/>
      <url>/2024/12/08/2024-12-08-picgo/</url>
      
        <content type="html"><![CDATA[<p>GitHub Pages站点大小不能超过1G，若图片太多的话可以用普通github仓库来建图床，不过这样就无法使用自己的域名。否则只能新建一个github帐号，然后再建一个专门用来存图片的GitHub Pages，如果用博客网站的同一个github帐号来建GitHub Pages图床的话，应该会与博客网站共享站点空间大小的限制。</p><h2 id="用同一个github帐号建图床"><a href="#用同一个github帐号建图床" class="headerlink" title="用同一个github帐号建图床"></a>用同一个github帐号建图床</h2><h3 id="建立仓库"><a href="#建立仓库" class="headerlink" title="建立仓库"></a>建立仓库</h3><p>新建一个名为img的公共仓库<br>进入Settings -&gt; Pages，设置为main分支<br>Save后就会出现 Your site is published at <a href="http://www.test.com/img/">http://www.test.com/img/</a> 这样的通知。<br><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMLaHKGQnEdzUoCwmS7VI0fP-nhRpEAAuHIMRtUkphTDSq-gyQLT_EBAAMCAAN5AAM2BA.png"> </p><blockquote><p>注意不勾选“Enforce HTTPS”，否则只能通过https访问，有些时候会用到http协议。</p></blockquote><h3 id="生成Token"><a href="#生成Token" class="headerlink" title="生成Token"></a>生成Token</h3><p>点击用户头像 –&gt; 选择 Settings。<br>点击 Developer settings。<br>点击 Personal access tokens 并点击 Generate new token 新建一个 Token。<br>填写 Token 描述，勾选 repo，然后点击 Generate token 生成一个 Token。<br>生成之后会显示Token的密钥，复制保存好。注意这个 Token 只会显示一次，自己先保存下来</p><h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><p>下载<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p><p>windows下载exe结尾的<br><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMMaHKGypvSKbR7FumMDrR8Tt4TQYUAAuPIMRtUkphTdMEb3z-Wgf8BAAMCAAN5AAM2BA.png"> </p><p>picgo自带的“GitHub图床”删除图片操作不能同步到github，使用picgo-plugin-github-plus插件可以在picgo相册中删除图片时自动把github上的图片也删除了。</p><p>在插件设置中搜索picgo-plugin-github-plus，然后安装即可。</p><p>安装好插件后，在图床设置 -&gt; githubPlus中进行githubPlus设置</p><p><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMNaHKG6020j9lnA8Fehi0fICzG39AAAuTIMRtUkphTBKDtRoio6lkBAAMCAAN5AAM2BA.png"><br>repo就是“github用户名&#x2F;仓库名”。</p><p>选择“设为默认图床”，然后确定。</p><p>版本2.2.0之后，PicGo 内部会默认开启一个小型的服务器，用于配合其他应用来调用 PicGo 进行上传。</p><p>打开 PicGo 详细页面，进入 PicGo 设置–设置Server<br><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMOaHKHAjS4GZ2bcipmT8mOAyw51LsAAuXIMRtUkphTsnj18TeAx-0BAAMCAAN5AAM2BA.png"> </p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>版本要求：Typora 0.9.84 及以上。</p><p><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMPaHKIB87QKIKEJK54GgHCIE3B0xAAAubIMRtUkphTpc49LY5rRxwBAAMCAAN5AAM2BA.png"><br>设置完后，点“验证图片上传选项”。<br>验证成功会显示如下结果</p><p><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMQaHKIJgSPfAViVAzsrpla-zCVgj0AAufIMRtUkphTffb684CDUmIBAAMCAAN5AAM2BA.png"><br>使用Typora<br>上面的设置完成后，在 Typora 里插入图片时会把图片复制到本地的指定目录，待编辑完md文件后再选择格式 -&gt; 图像 -&gt;上传所有本地图片，就可以自动把md文件里的图片上传到github，并自动把图像的URL更换。不设置为插入图片就自动上传是因为上传到github后，自定义的图片URL生效需要一段时间，URL没生效时在Typora里无法预览图片。</p><blockquote><p>注意：typora 在线预览github图片失败是因为自定义的URL还不能访问，而typora没有自动刷新远程图片的功能，稍等一下重启md文件，就能看到typora把github图片加载出来了。</p></blockquote><h2 id="用独立的二级域名设置图片URL"><a href="#用独立的二级域名设置图片URL" class="headerlink" title="用独立的二级域名设置图片URL"></a>用独立的二级域名设置图片URL</h2><p>与上一种方法大同小异，区别在于要另外注册一个github帐号，就可以用“images.test.com”这样的域名设置图片URL了。</p><p>这里只列出两种方法的不同处，具体细节参考上一种方法。</p><h3 id="建立仓库时，仓库名后面要以github-io结尾"><a href="#建立仓库时，仓库名后面要以github-io结尾" class="headerlink" title="建立仓库时，仓库名后面要以github.io结尾"></a>建立仓库时，仓库名后面要以github.io结尾</h3><p><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMRaHKIRI9piKA87lCx15gQ_pyfxFYAAujIMRtUkphTgaCrc9Kp-GwBAAMCAAN5AAM2BA.png"> </p><h3 id="要到万网设置域名解析，上一种方法不用。"><a href="#要到万网设置域名解析，上一种方法不用。" class="headerlink" title="要到万网设置域名解析，上一种方法不用。"></a>要到万网设置域名解析，上一种方法不用。</h3><p><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMSaHKIbyfAU_Cw6b9UstT4xLLzf7IAAunIMRtUkphTFDZX-2HdBukBAAMCAAN5AAM2BA.png"> </p><blockquote><p>pages设置，同样不勾选“Enforce HTTPS”</p></blockquote><p><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMTaHKIjh-SL-7nTOChA90YZIYjRw0AAurIMRtUkphTzNgaStqTQQwBAAMCAAN5AAM2BA.png"></p><h3 id="picgo设置"><a href="#picgo设置" class="headerlink" title="picgo设置"></a>picgo设置</h3><p>注意，仓库名中的test是我新建的github帐号用户名，test.github.io是刚刚创建的github pages仓库。域名写刚刚解析的二级域名。<br><img src="https://img.5205230.xyz/file/AgACAgQAAyEGAASYGPkcAAMUaHKIxv_cf91LeeIXo44SEI7C6F4AAuzIMRtUkphTyuDkNOeR3DoBAAMCAAN5AAM2BA.png"> </p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 yum安装报错“Could not resolve host: mirrorlist.centos.org； Name or service not known“之解决办法（换源）</title>
      <link href="/2024/11/22/2024-11-22-centos7-hy/"/>
      <url>/2024/11/22/2024-11-22-centos7-hy/</url>
      
        <content type="html"><![CDATA[<h1 id="一、键更换脚本"><a href="#一、键更换脚本" class="headerlink" title="一、键更换脚本"></a>一、键更换脚本</h1><h2 id="一、国内源"><a href="#一、国内源" class="headerlink" title="一、国内源"></a>一、国内源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)</span><br></pre></td></tr></table></figure><h2 id="推荐使用一"><a href="#推荐使用一" class="headerlink" title="推荐使用一"></a>推荐使用一</h2><h3 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://linuxmirrors.cn/main.sh)</span><br></pre></td></tr></table></figure><h3 id="国内教育网"><a href="#国内教育网" class="headerlink" title="国内教育网"></a>国内教育网</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://linuxmirrors.cn/main.sh) --edu </span><br></pre></td></tr></table></figure><h3 id="海外地区"><a href="#海外地区" class="headerlink" title="海外地区"></a>海外地区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://linuxmirrors.cn/main.sh) --abroad </span><br></pre></td></tr></table></figure><h2 id="二、手动更换"><a href="#二、手动更换" class="headerlink" title="二、手动更换"></a>二、手动更换</h2><p>CentOS7更换镜像源</p><h3 id="1、先安装wget"><a href="#1、先安装wget" class="headerlink" title="1、先安装wget"></a>1、先安装wget</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br></pre></td></tr></table></figure><h3 id="2、打开阿里镜像"><a href="#2、打开阿里镜像" class="headerlink" title="2、打开阿里镜像"></a>2、打开阿里镜像</h3><p><a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com/</a></p><h3 id="3、下载CentOS-7的对应的repo文件"><a href="#3、下载CentOS-7的对应的repo文件" class="headerlink" title="3、下载CentOS 7的对应的repo文件"></a>3、下载CentOS 7的对应的repo文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><h3 id="4、更新镜像源"><a href="#4、更新镜像源" class="headerlink" title="4、更新镜像源"></a>4、更新镜像源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><p>执行完上面三行命令就好了</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>永久免费vps serv00恢复到刚申请的状态</title>
      <link href="/2024/09/02/2024-09-02-serv00-recover/"/>
      <url>/2024/09/02/2024-09-02-serv00-recover/</url>
      
        <content type="html"><![CDATA[<h1 id="永久免费vps-serv00恢复到刚申请的状态"><a href="#永久免费vps-serv00恢复到刚申请的状态" class="headerlink" title="永久免费vps serv00恢复到刚申请的状态"></a>永久免费vps serv00恢复到刚申请的状态</h1><h2 id="一、清除指定账户的所有进程"><a href="#一、清除指定账户的所有进程" class="headerlink" title="一、清除指定账户的所有进程"></a>一、清除指定账户的所有进程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkill -kill -u $&#123;username&#125;</span><br></pre></td></tr></table></figure><p><code>比如：pkill -kill -u admin</code></p><h2 id="二、删除文件夹及文件夹"><a href="#二、删除文件夹及文件夹" class="headerlink" title="二、删除文件夹及文件夹"></a>二、删除文件夹及文件夹</h2><h3 id="1-更改非隐藏目录的权限"><a href="#1-更改非隐藏目录的权限" class="headerlink" title="1.更改非隐藏目录的权限"></a>1.更改非隐藏目录的权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 755 ~/*</span><br></pre></td></tr></table></figure><h3 id="2-更改隐藏目录的权限"><a href="#2-更改隐藏目录的权限" class="headerlink" title="2.更改隐藏目录的权限"></a>2.更改隐藏目录的权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 755 ~/.*</span><br></pre></td></tr></table></figure><h2 id="三、删除文件夹及文件"><a href="#三、删除文件夹及文件" class="headerlink" title="三、删除文件夹及文件"></a>三、删除文件夹及文件</h2><h3 id="1-删除非隐藏文件夹及其文件"><a href="#1-删除非隐藏文件夹及其文件" class="headerlink" title="1.删除非隐藏文件夹及其文件"></a>1.删除非隐藏文件夹及其文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/*</span><br></pre></td></tr></table></figure><h3 id="2-删除非隐藏文件夹及其文件"><a href="#2-删除非隐藏文件夹及其文件" class="headerlink" title="2.删除非隐藏文件夹及其文件"></a>2.删除非隐藏文件夹及其文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.*</span><br></pre></td></tr></table></figure><h2 id="四、添加相应的文件"><a href="#四、添加相应的文件" class="headerlink" title="四、添加相应的文件"></a>四、添加相应的文件</h2><p><img src="https://img.5205230.xyz/file/195736ef039bc73e9d0c0.jpg" alt="文件树状图"></p><h3 id="1-添加mail文件"><a href="#1-添加mail文件" class="headerlink" title="1.添加mail文件"></a>1.添加<code>mail</code>文件</h3><h3 id="2-添加repo文件"><a href="#2-添加repo文件" class="headerlink" title="2.添加repo文件"></a>2.添加<code>repo</code>文件</h3><h3 id="3-添加domains文件"><a href="#3-添加domains文件" class="headerlink" title="3.添加domains文件"></a>3.添加<code>domains</code>文件</h3><h4 id="添加一个文件，文件名为：你的用户-serv00-net"><a href="#添加一个文件，文件名为：你的用户-serv00-net" class="headerlink" title="添加一个文件，文件名为：你的用户+.serv00.net"></a>添加一个文件，文件名为：<code>你的用户+.serv00.net</code></h4><h4 id="添加logs文件"><a href="#添加logs文件" class="headerlink" title="添加logs文件"></a>添加<code>logs</code>文件</h4><h4 id="添加pubic-html文件"><a href="#添加pubic-html文件" class="headerlink" title="添加pubic_html文件"></a>添加<code>pubic_html</code>文件</h4><h4 id="最后添加index-php"><a href="#最后添加index-php" class="headerlink" title="最后添加index.php"></a>最后添加<code>index.php</code></h4><p><strong>内容为：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;pl&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=utf-8 /&gt;</span><br><span class="line">        &lt;title&gt;Sign in&lt;/title&gt;</span><br><span class="line">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;link href=&quot;/static/bootstrap3/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;link href=&quot;/static/sass/devilweb.css?2.0.17.1&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot; /&gt;</span><br><span class="line">        &lt;link href=&quot;/static/bootstrap-select/bootstrap-select.min.css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot; /&gt;</span><br><span class="line">        &lt;link href=&quot;/static/font-awesome/css/font-awesome.min.css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;/static/jquery/jquery.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;/static/bootstrap3/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;/static/bootstrap-select/bootstrap-select.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;/static/common.js?2.0.17.1&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">            loaderForm(&#x27;Please wait...&#x27;);</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body id=&quot;login_body&quot; class=&quot;login_body_dark&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;background-container&quot;&gt;&lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;div class=&quot;modal fade&quot; id=&quot;language_modal&quot; role=&quot;dialog&quot; aria-hidden=&quot;true&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;modal-dialog&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;modal-content&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;modal-header&quot;&gt;</span><br><span class="line">                    &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/button&gt;</span><br><span class="line">                    &lt;h4&gt;Change language&lt;/h4&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; method=&quot;post&quot; action=&quot;/lang/&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;modal-body&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;csrfmiddlewaretoken&quot; value=&quot;t23AOwubbak4L2pwyW1cKqoU4Nvq1e4Pw3JwCfNBVM09Hr3I7v3QCd0IXWfY0Qv4&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label class=&quot;col-md-3 control-label&quot; for=&quot;inputEmail&quot;&gt;Select language&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-md-4&quot;&gt;</span><br><span class="line">                                &lt;select name=&quot;language&quot; id=&quot;id_language&quot;&gt;</span><br><span class="line">                                    </span><br><span class="line">                                        &lt;option value=&quot;pl&quot;&gt;Polski&lt;/option&gt;</span><br><span class="line">                                    </span><br><span class="line">                                        &lt;option value=&quot;en&quot;&gt;English&lt;/option&gt;</span><br><span class="line">                                    </span><br><span class="line">                                &lt;/select&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;modal-footer&quot;&gt;</span><br><span class="line">                    &lt;button class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;&lt;i class=&quot;fa fa-times&quot;&gt;&lt;/i&gt; Close&lt;/button&gt;</span><br><span class="line">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;&lt;i class=&quot;fa fa-save&quot;&gt;&lt;/i&gt; Save changes&lt;/button&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                    </span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;next&quot; value=&quot;/file_manager/index.php?secure_token=Kqo6OlHa4aoZYebYFHCwWS2g4MwezJdw&amp;amp;get_action=get_content&amp;amp;file=%2Fdomains%2Fyasmeen.serv00.net%2Fpublic_html%2Findex.html&quot; /&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;centerlogin-wrapper&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;row login-fade&quot; id=&quot;centerlogin&quot; style=&quot;margin-top: -153px;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;span4 offset4 well&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;login-content&quot;&gt;</span><br><span class="line">                &lt;h3&gt;Web interface SERV00.COM&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">                &lt;form action=&quot;/login/&quot; method=&quot;post&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;hidden&quot; name=&quot;csrfmiddlewaretoken&quot; value=&quot;t23AOwubbak4L2pwyW1cKqoU4Nvq1e4Pw3JwCfNBVM09Hr3I7v3QCd0IXWfY0Qv4&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group&quot;&gt;&lt;label class=&quot;control-label&quot; for=&quot;id_username&quot;&gt;Username&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;Username&quot; class=&quot;form-control span4&quot; maxlength=&quot;60&quot; title=&quot;&quot; required id=&quot;id_username&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;form-group&quot;&gt;&lt;label class=&quot;control-label&quot; for=&quot;id_password&quot;&gt;Password&lt;/label&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;Password&quot; class=&quot;form-control span4&quot; title=&quot;&quot; required id=&quot;id_password&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    </span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;next&quot; value=&quot;/file_manager/index.php?secure_token=Kqo6OlHa4aoZYebYFHCwWS2g4MwezJdw&amp;amp;get_action=get_content&amp;amp;file=%2Fdomains%2Fyasmeen.serv00.net%2Fpublic_html%2Findex.html&quot; /&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;button id=&quot;submit&quot; type=&quot;submit&quot; name=&quot;submit&quot; class=&quot;btn btn-info btn-block&quot;&gt;Sign in&lt;/button&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class=&quot;login-footer&quot;&gt;</span><br><span class="line">                &lt;h5&gt;No account yet?&lt;/h5&gt;</span><br><span class="line">                &lt;p&gt;&lt;a href=&quot;https://www.serv00.com/offer&quot;&gt;Register&lt;/a&gt; to use our management system.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">                    </span><br><span class="line">                    &lt;h5&gt;Forgot your password?&lt;/h5&gt;</span><br><span class="line">                    &lt;p&gt;&lt;a href=&quot;/resetpass&quot;&gt;Click here&lt;/a&gt; to reset your password.&lt;/p&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;text-center post-login-box&quot;&gt;</span><br><span class="line">            &amp;copy; 2008 - 2024 ADMIN.NET.PL &amp;nbsp; &amp;bull; &amp;nbsp; All rights reserved&lt;br&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:void(0);&quot; onClick=&quot;$(&#x27;#language_modal&#x27;).modal(); return false;&quot;&gt;Change language&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var $inputUsername = $(&quot;#id_username&quot;);</span><br><span class="line">        var $passwordInput = $(&quot;#id_password&quot;);</span><br><span class="line">        $inputUsername.focus();</span><br><span class="line"></span><br><span class="line">        var $loginIcon = $(&#x27;&lt;span class=&quot;glyphicon glyphicon-user form-control-feedback text-muted&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&#x27;);</span><br><span class="line">        $loginIcon.insertAfter($inputUsername);</span><br><span class="line">        $inputUsername.parents(&#x27;.form-group&#x27;).addClass(&#x27;has-feedback&#x27;);</span><br><span class="line"></span><br><span class="line">        var $passwordIcon = $(&#x27;&lt;span class=&quot;glyphicon glyphicon-lock form-control-feedback text-muted&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&#x27;);</span><br><span class="line">        $passwordIcon.insertAfter($passwordInput);</span><br><span class="line">        $passwordInput.parents(&#x27;.form-group&#x27;).addClass(&#x27;has-feedback&#x27;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var bigScreenWidth = 2500;</span><br><span class="line">        var path = &#x27;/static/img/bg_normal.jpg&#x27;;</span><br><span class="line">        if (window.screen.width &gt; bigScreenWidth) &#123;</span><br><span class="line">            path = &#x27;/static/img/bg_big.jpg&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        var img = new Image();</span><br><span class="line">        img.onload = function() &#123;</span><br><span class="line">            $(&#x27;.background-container&#x27;).addClass(&#x27;loaded&#x27;);</span><br><span class="line">            if (window.screen.width &gt; bigScreenWidth) &#123;</span><br><span class="line">                $(&#x27;.background-container&#x27;).addClass(&#x27;big&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        img.src = path;</span><br><span class="line"></span><br><span class="line">        $(document).ready(function () &#123;</span><br><span class="line">            setTimeout(function () &#123;</span><br><span class="line">                $(&quot;#centerlogin&quot;).removeClass(&#x27;login-fade&#x27;);</span><br><span class="line">            &#125;, 300);</span><br><span class="line">            $(&#x27;select&#x27;).selectpicker();</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 白嫖分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> serv00 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖：修改硬盘温度过高导致的关机</title>
      <link href="/2024/08/18/2024-08-18-qunhuiwendu/"/>
      <url>/2024/08/18/2024-08-18-qunhuiwendu/</url>
      
        <content type="html"><![CDATA[<h1 id="群晖：修改硬盘温度过高导致的关机"><a href="#群晖：修改硬盘温度过高导致的关机" class="headerlink" title="群晖：修改硬盘温度过高导致的关机"></a>群晖：修改硬盘温度过高导致的关机</h1><h2 id="备份文件"><a href="#备份文件" class="headerlink" title="备份文件"></a>备份文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/syno/etc.defaults/scemd.xml /usr/syno/etc.defaults/scemd.xml-20240818</span><br></pre></td></tr></table></figure><h2 id="打开文件修改"><a href="#打开文件修改" class="headerlink" title="打开文件修改"></a>打开文件修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/syno/etc.defaults/scemd.xml</span><br></pre></td></tr></table></figure><h3 id="将61替换为85"><a href="#将61替换为85" class="headerlink" title="将61替换为85"></a>将61替换为85</h3><p><img src="https://img.5205230.xyz/file/4dd26ded52c354cca85b1.jpg" alt="图片"></p><h3 id="保存并退出"><a href="#保存并退出" class="headerlink" title="保存并退出"></a>保存并退出</h3><p>按键盘左上角的<code>exc</code></p><p><code>:wq</code></p><h3 id="重启设备"><a href="#重启设备" class="headerlink" title="重启设备"></a>重启设备</h3><p><code>reboot</code></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 群辉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>永久免费的节点！通过 Cloudflare 部署免费 VLESS 节点（方法二），4K高速，解锁Netflix、ChatGPT</title>
      <link href="/2024/07/20/2024-07-20-Vless/"/>
      <url>/2024/07/20/2024-07-20-Vless/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>前面，我们通过 zizifn 大佬的一个开源项目<a href="https://github.com/zizifn/edgetunnel"> edgetunnel</a> ，使得我们可以免费的在 Cloudflare 上面通过部署 Worker ，来创建一个免费 VLESS 节点！ 本文是 CM 基于 zizifn 的项目进行了二次创作，其实和 Worker 的部署大同小异，道理是一样的，只是多了很多功能，比如** 自动生成 SUB CLASH，SURGE订阅地址、自动优选 IP **等。<br>GitHub 地址：<a href="https://github.com/cmliu/edgetunnel">点击访问&gt;&gt;</a></p><h1 id="节点测速："><a href="#节点测速：" class="headerlink" title="节点测速："></a><strong>节点测速：</strong></h1><p><img src="https://img.5205230.xyz/file/3f997229666cbbe133219.png"></p><h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a><strong>准备工作：</strong></h2><p>1、注册 Cloudflare 账号：<a href="https://dash.cloudflare.com/1fd6ef1f052a191089c7a5628aa6f5a7">点击注册</a><br>2、域名一个（虽说可以不使用域名，但是推荐大家还是购买自己的域名，毕竟不贵，一年才 10 元 RMB） 推荐在 Namesilo 进行购买，因为他的 WHOIS 隐私 是免费的，可以适当的进行一下隐私保护，而且域名还都挺便宜的。<br>Namesilo 域名地址：<a href="https://www.namesilo.com/?rid=fe81174he">点击访问</a> （新用户1美元优惠券：kejixiaolu）<br>美国地址生成器：<a href="https://www.meiguodizhi.com/">点击生成</a>3、托管域名到 Cloudflare</p><h2 id="CloudFlare-部署免费节点"><a href="#CloudFlare-部署免费节点" class="headerlink" title="CloudFlare 部署免费节点"></a><strong>CloudFlare 部署免费节点</strong></h2><h3 id="下载源文件"><a href="#下载源文件" class="headerlink" title="下载源文件"></a><strong>下载源文件</strong></h3><p>下载作者的 Worker 文件：点击下载 <a href="https://raw.githubusercontent.com/cmliu/edgetunnel/main/worker.zip">worker.zip</a></p><h3 id="Pages-部署-VLESS"><a href="#Pages-部署-VLESS" class="headerlink" title="Pages 部署 VLESS"></a><strong>Pages 部署 VLESS</strong></h3><p>来到 Cloudflare 首页，点击 Workers 和 Pages ，点击 Pages ，点击 使用直接上传创建 – 上传资产。</p><p><img src="https://img.5205230.xyz/file/908636252c0e44d05d2fc.png"></p><p>为我们的项目创建一个名字，点击创建项目。</p><p><img src="https://img.5205230.xyz/file/ca76e0f4a7dab669e6114.png"></p><p>上传刚才下载下来的<a href="https://raw.githubusercontent.com/cmliu/edgetunnel/main/worker.zip"> worker.zip </a>（从计算机中选择 – 上传压缩文件），然后点击 部署站点，继续处理项目！</p><p><img src="https://img.5205230.xyz/file/5856f733036a9bbc95a8a.png"></p><h3 id="设置-UUID"><a href="#设置-UUID" class="headerlink" title="设置 UUID"></a><strong>设置 UUID</strong></h3><p>点击 UUID 在线生成：<a href="https://1024tools.com/uuid/">点击进入&gt;&gt;</a>，生成一个 UUID ，或是在 V2rayN 中生成一个！</p><p>回到刚才的项目，找到设置 – 环境变量 – 添加变量，变量名称：UUID ，变量值为刚才生成的 UUID ，点击保存！</p><p><img src="https://img.5205230.xyz/file/9604fd29815f511679ff9.png"></p><h3 id="重新部署-Pages"><a href="#重新部署-Pages" class="headerlink" title="重新部署 Pages"></a><strong>重新部署 Pages</strong></h3><p>回到项目，找到 部署，点击下面的 创建新部署，再次上传刚才的 <a href="https://raw.githubusercontent.com/cmliu/edgetunnel/main/worker.zip"> worker.zip </a>文件，保存并部署！</p><p><img src="https://img.5205230.xyz/file/e8921f0bbfba6b49c6629.png"></p><p>这样，我们点击上图中的 访问站点，若是有内容出现，证明部署成功</p><p>我们可以访问 https:&#x2F;&#x2F;域&#x2F;UUID ，来查看我们的节点。</p><p><img src="https://img.5205230.xyz/file/23c29a4bc73d98f81ccf4.png"></p><p>到这里，节点已经可以正常访问了，我们若是有域名，也可以加入一个自定义域，让其更牛批！</p><h3 id="设置自定义域"><a href="#设置自定义域" class="headerlink" title="设置自定义域"></a><strong>设置自定义域</strong></h3><p>添加自定义域，设置一个合适的二级域名，名字随意。若是已将域名托管到 Cloudflare ，直接按照下面操作即可！若是用其他免费的域名，或者域名没有托管到 CF，需要自行解析域名！</p><p><img src="https://img.5205230.xyz/file/bbdf40db7f5634f149bd7.png"></p><p>点击继续，然后，直接点击 激活域！一般情况下，几十秒就激活完成了！（后续或是需要删掉该项目，请先删除这个 自定义域）</p><p><img src="https://img.5205230.xyz/file/e9cab0c573bb1a571c8ba.png"></p><p><img src="https://img.5205230.xyz/file/3e08e7a1e9062168317eb.png"></p><p>现在尝试访问刚才设置的自定义域，也就是 https:&#x2F;&#x2F;二级域名&#x2F;UUID。</p><p><img src="https://img.5205230.xyz/file/1d7c772b4d98afb26a13e.png"></p><p>至此，节点部署完毕，我们导入上图中的 快速自适应订阅地址到相对于的 客户端软件，进行节点的订阅</p><p><img src="https://img.5205230.xyz/file/f6b6ba0f125fbeb0abdc4.png"></p><p>订阅完成，可以看到，多了很多节点，其实都是一个节点，只是用了不同的 IP。跟我们部署Worker 免费节点是一样的，只是自动进行了** IP 的优选**！</p><p>解锁 <strong>流媒体奈飞</strong>、 <strong>ChatGPT</strong> 等</p><p><img src="https://img.5205230.xyz/file/dd704a9679e7e65a296cb.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> 免费节点 </tag>
            
            <tag> Vless节点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用 Cloudflare Workers 自建 Docker 镜像代理</title>
      <link href="/2023/07/20/2023-07-20-CFdocker/"/>
      <url>/2023/07/20/2023-07-20-CFdocker/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>近期，由于个别用户在 <code>Docker Hub</code> 上传了领导人的 AI 语音项目，导致中国区的 Docker 官方仓库被封锁。在这一事件的影响下，国内所有 Docker 镜像服务均被迫下架，涵盖了阿里云镜像服务、上海交通大学镜像服务等。此外，Docker Hub 的官方域名也遭到封锁。</p><p>此次 Docker Hub 的封锁给国内依赖 Docker 的开发和运维团队带来了重大挑战。首先，团队成员无法直接从 Docker Hub 拉取或推送镜像，这直接影响了软件的开发和部署效率。此外，依赖 Docker 镜像的自动化构建和持续集成&#x2F;持续部署（CI&#x2F;CD）流程也因此受到阻碍，增加了项目管理的复杂性和时间成本。团队不得不花费额外时间和资源寻找并配置国内的替代 Docker 镜像源或私有镜像仓库，这不仅增加了工作量，还可能带来额外的安全性和稳定性问题。</p><p>尽管面临种种挑战，但通过使用 Cloudflare Worker 自建镜像代理，我们能有效绕开这些访问限制，确保顺畅获取所需的 Docker 镜像。在接下来的内容中，我将详细介绍如何利用 Cloudflare Worker 自建镜像代理，为你的项目恢复正常的开发和部署流程，确保技术团队可以继续高效工作。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>在开始之前，你需要准备一个域名和一个 <code>Cloudflare</code> 账号。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="Step-1-创建-Worker"><a href="#Step-1-创建-Worker" class="headerlink" title="Step 1: 创建 Worker"></a>Step 1: 创建 Worker</h3><p>在 Cloudflare 创建一个 Worker，如命名为 <code>docker</code>，然后将以下代码粘贴到 Worker 中，并点击 <code>部署</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&quot;fetch&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  event.<span class="title function_">passThroughOnException</span>();</span><br><span class="line">  event.<span class="title function_">respondWith</span>(<span class="title function_">handleRequest</span>(event.<span class="property">request</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dockerHub = <span class="string">&quot;https://registry-1.docker.io&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;zh-CN&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Docker 镜像代理使用说明&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        body &#123;</span></span><br><span class="line"><span class="string">            font-family: &#x27;Roboto&#x27;, sans-serif;</span></span><br><span class="line"><span class="string">            margin: 0;</span></span><br><span class="line"><span class="string">            padding: 0;</span></span><br><span class="line"><span class="string">            background-color: #f4f4f4;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .header &#123;</span></span><br><span class="line"><span class="string">            background: linear-gradient(135deg, #667eea, #764ba2);</span></span><br><span class="line"><span class="string">            color: #fff;</span></span><br><span class="line"><span class="string">            padding: 20px 0;</span></span><br><span class="line"><span class="string">            text-align: center;</span></span><br><span class="line"><span class="string">            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .container &#123;</span></span><br><span class="line"><span class="string">            max-width: 800px;</span></span><br><span class="line"><span class="string">            margin: 40px auto;</span></span><br><span class="line"><span class="string">            padding: 20px;</span></span><br><span class="line"><span class="string">            background-color: #fff;</span></span><br><span class="line"><span class="string">            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">            border-radius: 10px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .content &#123;</span></span><br><span class="line"><span class="string">            margin-bottom: 20px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .footer &#123;</span></span><br><span class="line"><span class="string">            text-align: center;</span></span><br><span class="line"><span class="string">            padding: 20px 0;</span></span><br><span class="line"><span class="string">            background-color: #333;</span></span><br><span class="line"><span class="string">            color: #fff;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        pre &#123;</span></span><br><span class="line"><span class="string">            background-color: #272822;</span></span><br><span class="line"><span class="string">            color: #f8f8f2;</span></span><br><span class="line"><span class="string">            padding: 15px;</span></span><br><span class="line"><span class="string">            border-radius: 5px;</span></span><br><span class="line"><span class="string">            overflow-x: auto;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        code &#123;</span></span><br><span class="line"><span class="string">            font-family: &#x27;Source Code Pro&#x27;, monospace;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        a &#123;</span></span><br><span class="line"><span class="string">            font-weight: bold;</span></span><br><span class="line"><span class="string">            color: #ffffff;</span></span><br><span class="line"><span class="string">            text-decoration: none;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        a:hover &#123;</span></span><br><span class="line"><span class="string">            text-decoration: underline;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        @media (max-width: 600px) &#123;</span></span><br><span class="line"><span class="string">            .container &#123;</span></span><br><span class="line"><span class="string">                margin: 20px;</span></span><br><span class="line"><span class="string">                padding: 15px;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            .header &#123;</span></span><br><span class="line"><span class="string">                padding: 15px 0;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&amp;family=Source+Code+Pro:wght@400;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;header&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;Docker 镜像代理使用说明&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;content&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;h3&gt;带镜像仓库地址使用说明&lt;/h3&gt;</span></span><br><span class="line"><span class="string">          &lt;p&gt;1.拉取镜像&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;pre&gt;&lt;code&gt;# 拉取 redis 官方镜像（不带命名空间）</span></span><br><span class="line"><span class="string">docker pull &#123;:host&#125;/redis</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 拉取 rabbitmq 官方镜像</span></span><br><span class="line"><span class="string">docker pull &#123;:host&#125;/library/rabbitmq</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 拉取 postgresql 非官方镜像</span></span><br><span class="line"><span class="string">docker pull &#123;:host&#125;/bitnami/postgresql&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.重命名镜像&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;pre&gt;&lt;code&gt;# 重命名 redis 镜像</span></span><br><span class="line"><span class="string">docker tag &#123;:host&#125;/library/redis redis </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 重命名 postgresql 镜像</span></span><br><span class="line"><span class="string">docker tag &#123;:host&#125;/bitnami/postgresql bitnami/postgresql&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;镜像源方式使用说明&lt;/h3&gt;&lt;p&gt;1.添加镜像源&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;pre&gt;&lt;code&gt;# 添加镜像代理到 Docker 镜像源</span></span><br><span class="line"><span class="string">sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt; EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [&quot;https://&#123;:host&#125;&quot;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.拉取镜像&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;pre&gt;&lt;code&gt;# 拉取 redis 官方镜像</span></span><br><span class="line"><span class="string">docker pull redis</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 拉取 rabbitmq 非官方镜像</span></span><br><span class="line"><span class="string">docker pull bitnami/rabbitmq</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 拉取 postgresql 官方镜像</span></span><br><span class="line"><span class="string">docker pull postgresql&lt;/code&gt;&lt;/pre&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;footer&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;©2024 &lt;a href=&quot;https://5205230.xyz&quot;&gt;5205230.xyz&lt;/a&gt;. All rights reserved. Powered by &lt;a href=&quot;https://cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = &#123;</span><br><span class="line">  <span class="comment">// 替换为你的域名</span></span><br><span class="line">  <span class="string">&quot;docker.5205230.xyz&quot;</span>: dockerHub,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">routeByHosts</span>(<span class="params">host</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (host <span class="keyword">in</span> routes) &#123;</span><br><span class="line">    <span class="keyword">return</span> routes[host];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> == <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">handleHomeRequest</span>(url.<span class="property">host</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> upstream = <span class="title function_">routeByHosts</span>(url.<span class="property">hostname</span>);</span><br><span class="line">  <span class="keyword">if</span> (!upstream) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createNotFoundResponse</span>(routes);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> isDockerHub = upstream == dockerHub;</span><br><span class="line">  <span class="keyword">const</span> authorization = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> == <span class="string">&quot;/v2/&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">handleFirstRequest</span>(upstream, authorization, url.<span class="property">hostname</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// get token</span></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> == <span class="string">&quot;/v2/auth&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">handleAuthRequest</span>(upstream, url, isDockerHub, authorization);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// redirect for DockerHub library images</span></span><br><span class="line">  <span class="comment">// Example: /v2/busybox/manifests/latest =&gt; /v2/library/busybox/manifests/latest</span></span><br><span class="line">  <span class="keyword">if</span> (isDockerHub) &#123;</span><br><span class="line">    <span class="keyword">const</span> pathParts = url.<span class="property">pathname</span>.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (pathParts.<span class="property">length</span> == <span class="number">5</span>) &#123;</span><br><span class="line">      pathParts.<span class="title function_">splice</span>(<span class="number">2</span>, <span class="number">0</span>, <span class="string">&quot;library&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> redirectUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(url);</span><br><span class="line">      redirectUrl.<span class="property">pathname</span> = pathParts.<span class="title function_">join</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(redirectUrl.<span class="title function_">toString</span>(), <span class="number">301</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">handlePullRequest</span>(upstream, request);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parseAuthenticate</span>(<span class="params">authenticateStr</span>) &#123;</span><br><span class="line">  <span class="comment">// sample: Bearer realm=&quot;https://auth.ipv6.docker.com/token&quot;,service=&quot;registry.docker.io&quot;</span></span><br><span class="line">  <span class="comment">// match strings after =&quot; and before &quot;</span></span><br><span class="line">  <span class="keyword">const</span> re = <span class="regexp">/(?&lt;=\=&quot;)(?:\\.|[^&quot;\\])*(?=&quot;)/g</span>;</span><br><span class="line">  <span class="keyword">const</span> matches = authenticateStr.<span class="title function_">match</span>(re);</span><br><span class="line">  <span class="keyword">if</span> (matches == <span class="literal">null</span> || matches.<span class="property">length</span> &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`invalid Www-Authenticate Header: <span class="subst">$&#123;authenticateStr&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">realm</span>: matches[<span class="number">0</span>],</span><br><span class="line">    <span class="attr">service</span>: matches[<span class="number">1</span>],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchToken</span>(<span class="params">wwwAuthenticate, scope, authorization</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(wwwAuthenticate.<span class="property">realm</span>);</span><br><span class="line">  <span class="keyword">if</span> (wwwAuthenticate.<span class="property">service</span>.<span class="property">length</span>) &#123;</span><br><span class="line">    url.<span class="property">searchParams</span>.<span class="title function_">set</span>(<span class="string">&quot;service&quot;</span>, wwwAuthenticate.<span class="property">service</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (scope) &#123;</span><br><span class="line">    url.<span class="property">searchParams</span>.<span class="title function_">set</span>(<span class="string">&quot;scope&quot;</span>, scope);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> headers = <span class="keyword">new</span> <span class="title class_">Headers</span>();</span><br><span class="line">  <span class="keyword">if</span> (authorization) &#123;</span><br><span class="line">    headers.<span class="title function_">set</span>(<span class="string">&quot;Authorization&quot;</span>, authorization);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123; <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>, <span class="attr">headers</span>: headers &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleHomeRequest</span>(<span class="params">host</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="variable constant_">HTML</span>.<span class="title function_">replace</span>(<span class="regexp">/&#123;:host&#125;/g</span>, host), &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;text/html&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handlePullRequest</span>(<span class="params">upstream, request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">  <span class="keyword">const</span> newUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(upstream + url.<span class="property">pathname</span>);</span><br><span class="line">  <span class="keyword">const</span> newReq = <span class="keyword">new</span> <span class="title class_">Request</span>(newUrl, &#123;</span><br><span class="line">    <span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">    <span class="attr">headers</span>: request.<span class="property">headers</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;follow&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">fetch</span>(newReq);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleFirstRequest</span>(<span class="params">upstream, authorization, hostname</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(upstream + <span class="string">&quot;/v2/&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> headers = <span class="keyword">new</span> <span class="title class_">Headers</span>();</span><br><span class="line">  <span class="keyword">if</span> (authorization) &#123;</span><br><span class="line">    headers.<span class="title function_">set</span>(<span class="string">&quot;Authorization&quot;</span>, authorization);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// check if need to authenticate</span></span><br><span class="line">  <span class="keyword">const</span> resp = <span class="keyword">await</span> <span class="title function_">fetch</span>(newUrl.<span class="title function_">toString</span>(), &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">headers</span>: headers,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;follow&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (resp.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">      headers.<span class="title function_">set</span>(</span><br><span class="line">        <span class="string">&quot;Www-Authenticate&quot;</span>,</span><br><span class="line">        <span class="string">`Bearer realm=&quot;https://<span class="subst">$&#123;hostname&#125;</span>/v2/auth&quot;,service=&quot;cloudflare-docker-proxy&quot;`</span></span><br><span class="line">      );</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;), &#123;</span><br><span class="line">      <span class="attr">status</span>: <span class="number">401</span>,</span><br><span class="line">      <span class="attr">headers</span>: headers,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> resp;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleAuthRequest</span>(<span class="params">upstream, url, isDockerHub, authorization</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(upstream + <span class="string">&quot;/v2/&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> resp = <span class="keyword">await</span> <span class="title function_">fetch</span>(newUrl.<span class="title function_">toString</span>(), &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;follow&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (resp.<span class="property">status</span> !== <span class="number">401</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> resp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> authenticateStr = resp.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;WWW-Authenticate&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (authenticateStr === <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> resp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> wwwAuthenticate = <span class="title function_">parseAuthenticate</span>(authenticateStr);</span><br><span class="line">  <span class="keyword">let</span> scope = url.<span class="property">searchParams</span>.<span class="title function_">get</span>(<span class="string">&quot;scope&quot;</span>);</span><br><span class="line">  <span class="comment">// autocomplete repo part into scope for DockerHub library images</span></span><br><span class="line">  <span class="comment">// Example: repository:busybox:pull =&gt; repository:library/busybox:pull</span></span><br><span class="line">  <span class="keyword">if</span> (scope &amp;&amp; isDockerHub) &#123;</span><br><span class="line">    <span class="keyword">let</span> scopeParts = scope.<span class="title function_">split</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (scopeParts.<span class="property">length</span> == <span class="number">3</span> &amp;&amp; !scopeParts[<span class="number">1</span>].<span class="title function_">includes</span>(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">      scopeParts[<span class="number">1</span>] = <span class="string">&quot;library/&quot;</span> + scopeParts[<span class="number">1</span>];</span><br><span class="line">      scope = scopeParts.<span class="title function_">join</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">fetchToken</span>(wwwAuthenticate, scope, authorization);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNotFoundResponse</span> = (<span class="params">routes</span>) =&gt; <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">  <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; routes &#125;),</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="number">404</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>请将脚本中的 <code>docker.5205230.xyz</code> 替换为你的域名。</p><h3 id="Step-2-绑定域名"><a href="#Step-2-绑定域名" class="headerlink" title="Step 2: 绑定域名"></a>Step 2: 绑定域名</h3><p>点击 <code>DOCKER</code> 进入 Worker 页面，点击设置 &gt; 触发器 &gt; 添加自定义域名，输入你要绑定域名，等待创建完成，如下图所示：<br><img src="https://img.5205230.xyz/file/1803642f965ebf71417f0.png" alt="绑定域名"></p><h3 id="Step-3-访问镜像代理首页"><a href="#Step-3-访问镜像代理首页" class="headerlink" title="Step 3: 访问镜像代理首页"></a>Step 3: 访问镜像代理首页</h3><p>访问域名 <code>dp.410006.xyz</code>，可查看镜像代理的使用说明：<br><img src="https://img.5205230.xyz/file/6f7c7cd2f79a411ec6181.png" alt="镜像代理的使用说明"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在这篇文章中，我介绍了如何使用 Cloudflare Workers 创建一个名为 <code>docker</code> 的 Worker，并将其绑定到自定义域名。通过完成这些步骤，你可以使用自定义域名作为 Docker 镜像代理，最终绕过网络限制，成功拉取 Docker 镜像。</p>]]></content>
      
      
      <categories>
          
          <category> 白嫖教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用cdnfly5.1.11自建CDN并配置云端</title>
      <link href="/2023/05/14/2023-05-14-cdnfly/"/>
      <url>/2023/05/14/2023-05-14-cdnfly/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.5205230.xyz/file/327de7685fc1a6762d447.png" alt="图片"></p><h1 id="一、建立云端授权站"><a href="#一、建立云端授权站" class="headerlink" title="一、建立云端授权站"></a>一、建立云端授权站</h1><p><img src="https://img.5205230.xyz/file/28281860775471c584856.png" alt="图片"></p><h2 id="1、需要绑定："><a href="#1、需要绑定：" class="headerlink" title="1、需要绑定："></a>1、需要绑定：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. auth.cdnfly.cn</span><br><span class="line">2. monitor.cdnfly.cn</span><br><span class="line">3. cdnfly.cn</span><br></pre></td></tr></table></figure><h2 id="2、修改伪静态nginx伪静态："><a href="#2、修改伪静态nginx伪静态：" class="headerlink" title="2、修改伪静态nginx伪静态："></a>2、修改伪静态nginx伪静态：</h2><p><img src="https://img.5205230.xyz/file/ec278b4b43ee62a74ab4c.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;  </span><br><span class="line"> if (!-e $request_filename)&#123; </span><br><span class="line">rewrite ^(.*)$ /index.php/$1 last; break;  </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、上传源代码"><a href="#3、上传源代码" class="headerlink" title="3、上传源代码"></a>3、上传源代码</h2><p><a href="https://t.me/mikeuse">https://t.me/mikeuse</a></p><h3 id="1、创建脚本网站"><a href="#1、创建脚本网站" class="headerlink" title="1、创建脚本网站"></a>1、创建脚本网站</h3><p><img src="https://img.5205230.xyz/file/821e66c1816bff8080749.png" alt="图片"></p><h3 id="2、修改配置文件CdnSysTemv4"><a href="#2、修改配置文件CdnSysTemv4" class="headerlink" title="2、修改配置文件CdnSysTemv4"></a>2、修改配置文件CdnSysTemv4</h3><p><img src="https://img.5205230.xyz/file/c4b25edefe4d2dbcdcc22.png" alt="图片"></p><h3 id="3、主控相关SSH脚本"><a href="#3、主控相关SSH脚本" class="headerlink" title="3、主控相关SSH脚本"></a>3、主控相关SSH脚本</h3><blockquote><p>主控服务器配置要求最低2-8（搭建测试也可以用2-2）<br>{: .prompt-tip }</p></blockquote><h4 id="CdnSysTem一键全自动安装主控脚本"><a href="#CdnSysTem一键全自动安装主控脚本" class="headerlink" title="CdnSysTem一键全自动安装主控脚本"></a>CdnSysTem一键全自动安装主控脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget;wget http://api.cmapi.us.kg/CdnSysTemv4;sh CdnSysTemv4</span><br></pre></td></tr></table></figure><h4 id="一键取消主控域名限制脚本"><a href="#一键取消主控域名限制脚本" class="headerlink" title="一键取消主控域名限制脚本"></a>一键取消主控域名限制脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget;wget http://api.cmapi.us.kg/umdnv4;sh umdnv4</span><br></pre></td></tr></table></figure><h4 id="一键拉起主控授权制脚本"><a href="#一键拉起主控授权制脚本" class="headerlink" title="一键拉起主控授权制脚本"></a>一键拉起主控授权制脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget;wget http://api.cmapi.us.kg/Authv4;sh Authv4</span><br></pre></td></tr></table></figure><blockquote><p>节点相关SSH脚本,节点服务器配置要求最低2-2<br>{: .prompt-warning }</p></blockquote><blockquote><p>如果你节点服务器防御低你可以屏蔽境外IP<br>{: .prompt-tip }</p></blockquote><h4 id="节点一键禁止境外IP访问脚本"><a href="#节点一键禁止境外IP访问脚本" class="headerlink" title="节点一键禁止境外IP访问脚本:"></a>节点一键禁止境外IP访问脚本:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget;wget http://api.cmapi.us.kg/ChinaNodeFirewallRulesV8;sh ChinaNodeFirewallRulesV8</span><br></pre></td></tr></table></figure><h4 id="主控IP-主控-Elasticsearch-IP"><a href="#主控IP-主控-Elasticsearch-IP" class="headerlink" title="主控IP 主控(Elasticsearch)IP"></a>主控IP 主控(Elasticsearch)IP</h4><p>如果节点使用一键禁止境外IP访问脚本后需要这样设置：（如图）：<br><img src="https://img.5205230.xyz/file/f0ea5b3060c0c34e367d6.png" alt="图片"></p><blockquote><p>屏蔽境外防御有效减轻服务器被境外攻击风险，可以全部禁止境外，但最少必须留有一个节点境外可以访问，不然境外用户或者对接的网站访问或者对接不了.<br>{: .prompt-warning }</p></blockquote><p>一键检测节点带宽大小脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget;wget http://api.cmapi.us.kg/kvmv4;sh kvmv4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cdnfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加 SWAP 虚拟内存</title>
      <link href="/2023/05/13/2023-05-13-swap/"/>
      <url>/2023/05/13/2023-05-13-swap/</url>
      
        <content type="html"><![CDATA[<h2 id="添加-SWAP-虚拟内存"><a href="#添加-SWAP-虚拟内存" class="headerlink" title="添加 SWAP 虚拟内存"></a>添加 SWAP 虚拟内存</h2><blockquote><p>注意：VPS 的内存如果过小，建议设置一下 SWAP，一般为内存的 1-1.5 倍即可，可以让系统运行更流畅！<br>{: .prompt-warning }</p></blockquote><h2 id="第一种添加-SWAP-虚拟内存"><a href="#第一种添加-SWAP-虚拟内存" class="headerlink" title="第一种添加 SWAP 虚拟内存:"></a>第一种添加 SWAP 虚拟内存:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; chmod +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.5205230.xyz/file/9b4c67529419073c0b01b.png" alt="图片"></p><blockquote><p>选择 <code>18</code>，然后输入你想要扩容的数值即可。<br>{: .prompt-tip }</p></blockquote><p><img src="https://img.5205230.xyz/file/7cfb5bfeefa1db1d79825.png" alt="图片"></p><h2 id="第二种添加-SWAP-虚拟内存："><a href="#第二种添加-SWAP-虚拟内存：" class="headerlink" title="第二种添加 SWAP 虚拟内存："></a>第二种添加 SWAP 虚拟内存：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget &amp;&amp; wget -O set_swap.sh --no-check-certificate https://soft.mengclaw.com/Bash/set_swap.sh &amp;&amp; bash set_swap.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟内存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>telegraph-Image：搭建你的专属开源图床</title>
      <link href="/2023/04/20/2023-06-07-telegraph-Image/"/>
      <url>/2023/04/20/2023-06-07-telegraph-Image/</url>
      
        <content type="html"><![CDATA[<p>通过 <strong>Telegraph</strong> 与<strong>赛博菩萨</strong>提供的 Pages、D1，搭建一个专属于你自己的开源图床，如果你有更多需求还可通过优选加速图片载入时间，更有接入ModerateContent提供的审查图像内容的API key，过滤涩涩内容！</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol><li><strong>无限图片储存数量</strong> ，你可以上传不限数量的图片  <strong>but！</strong> <em><strong>单张图片不能超过5MB</strong></em></li><li><strong>无需服务器</strong> ，托管于Cloudflare的网络上，当使用量不超过Cloudflare的免费额度时，完全免费</li><li><strong>无需域名</strong> ，可以使用Cloudflare Pages提供的*.pages.dev的免费二级域名，同时也支持绑定自定义域名</li><li><strong>支持图片审查API</strong> ，可根据需要开启，开启后不良图片将自动屏蔽，不再加载</li><li><strong>支持后台管理</strong> ，日志管理，查看访问前20的Referer、IP、img,可以对上传的图片进行在线预览，添加白名单，黑名单等操作</li></ol><hr><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="1-Pages-部署-telegraph-Image-项目"><a href="#1-Pages-部署-telegraph-Image-项目" class="headerlink" title="1. Pages 部署 telegraph-Image 项目"></a>1. Pages 部署 <strong>telegraph-Image 项目</strong></h3><ul><li>打开<a href="https://github.com/x-dr/telegraph-Image">telegraph-Image仓库</a>项目，先给作者点击<code>Star</code>后再点击<code>Fork</code>！可以增加成功率！！！<strong>手动狗头</strong></li><li>回到 <strong>Workers 和 Pages</strong> &gt; <strong>概述</strong> &gt; <strong>创建</strong> &gt; <strong>Pages</strong> &gt; <strong>连接到Git</strong> &gt; 选择<code>telegraph-Image</code>项目 &gt; <strong>保存并部署</strong>即可</li></ul><hr><h3 id="2-绑定自定义域"><a href="#2-绑定自定义域" class="headerlink" title="2. 绑定自定义域"></a>2. 绑定自定义域</h3><ul><li>这里推荐优先使用已经转入CF的域名，并开启 <strong>小黄云</strong> 。如果你没有域名，也可以退而求其次使用<strong>CNAME方式</strong>使用免费域名接入自定义域。</li><li>回到  <strong>Workers 和 Pages &#x2F;</strong> <code>telegraph-Image</code>项目 &gt; <strong>设置</strong> &gt; <strong>函数</strong> &gt; <strong>放置</strong> &gt; <strong>制作</strong> &gt; <strong>智能</strong> &gt; <strong>保存</strong></li></ul><hr><h3 id="3-创建管理后台"><a href="#3-创建管理后台" class="headerlink" title="3. 创建管理后台"></a>3. 创建管理后台</h3><ul><li>3.1 回到 <strong>Workers 和 Pages</strong> &gt; <strong>D1</strong> &gt; <strong>创建数据库</strong> &gt; <strong>仪表盘</strong> &gt; 数据库名称<code>img</code><em>(名称可取任意值)</em> &gt; <strong>创建</strong></li><li>3.2 进入<code>img</code>数据库 &gt; <strong>控制台</strong> &gt; <code>粘贴以下代码</code>后 &gt; 点击<strong>执行</strong> &gt; 等待提示 <strong>此查询已成功执行。</strong> SQL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS tgimglog;</span><br><span class="line">CREATE TABLE IF NOT EXISTS tgimglog (</span><br><span class="line">    `id` integer PRIMARY KEY NOT NULL,</span><br><span class="line">    `url` text,</span><br><span class="line">    `referer` text,</span><br><span class="line">    `ip` varchar(255),</span><br><span class="line">    `time` DATE</span><br><span class="line">);</span><br><span class="line">DROP TABLE IF EXISTS imginfo;</span><br><span class="line">CREATE TABLE IF NOT EXISTS imginfo (</span><br><span class="line">    `id` integer PRIMARY KEY NOT NULL,</span><br><span class="line">    `url` text,</span><br><span class="line">    `referer` text,</span><br><span class="line">    `ip` varchar(255),</span><br><span class="line">    `rating` text,</span><br><span class="line">    `total` integer,</span><br><span class="line">    `time` DATE</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><p>3.3 回到  <strong>Workers 和 Pages &#x2F;</strong> <code>telegraph-Image</code>项目 &gt; <strong>设置</strong> &gt; <strong>函数</strong> &gt; <strong>D1 数据库绑定</strong> &gt; 变量名<code>IMG</code> &gt; <code>img</code>数据库 &gt; 点击<strong>保存</strong></p></li><li><p>3.4 回到  <strong>Workers 和 Pages &#x2F;</strong> <code>telegraph-Image</code>项目 &gt; <strong>设置</strong> &gt; <strong>环境变量</strong> &gt; <strong>为生产环境定义变量</strong> &gt; 变量内容如下:</p></li><li><p>变量名<code>BASIC_USER</code>，值为你的<strong>后台管理员用户名</strong></p></li><li><p>变量名<code>BASIC_PASS</code>，值为你的<strong>后台管理员密码</strong></p></li><li><p><strong>无需审查涩涩内容可跳过这一步</strong></p><ul><li>打开<a href="https://moderatecontent.com/signup">ModerateContent</a> API申请页面，输入你的邮箱后点击<strong>SUBMIT</strong></li><li>前往你的邮箱将 <strong>ModerateContent.com Sup</strong> 邮件内的 <strong>API Key</strong> 复制出来</li><li>变量名<code>ModerateContentApiKey</code>，值为你的 <strong>API Key</strong></li></ul></li><li><p>点击<strong>保存</strong></p></li><li><p>3.5 回到  <strong>Workers 和 Pages &#x2F;</strong> <code>telegraph-Image</code>项目 &gt; <strong>部署</strong> &gt; 右下角<strong>三个点</strong> &gt; <strong>重试部署</strong>即可</p></li></ul><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>例如：你的 <strong>Pages自定义域</strong> 为<code>img.131213.xyz</code></p><ul><li><code>https://img.131213.xyz</code> 为 <strong>图床上传使用地址</strong></li><li><code>https://img.131213.xyz/admin</code> 为 <strong>图床后台管理地址</strong></li><li><code>https://img.131213.xyz/list</code> 为 <strong>图床访问日志</strong></li></ul><hr><h2 id="变量说明"><a href="#变量说明" class="headerlink" title="变量说明"></a>变量说明</h2><table><thead><tr><th>变量名</th><th>示例</th><th>备注</th></tr></thead><tbody><tr><td>BASIC_USER</td><td>admin</td><td>后台管理员用户名</td></tr><tr><td>BASIC_PASS</td><td>123456</td><td>后台管理员密码</td></tr><tr><td>ModerateContentApiKey</td><td>8ba353957d6c2bea538dca28a66a04cd</td><td>审查图像内容的API key</td></tr><tr><td>RATINGAPI</td><td><code>https://xxx.xxx/rating</code></td><td><a href="https://github.com/x-dr/nsfwjs-api">自建的鉴黄api</a></td></tr></tbody></table><p>注意优先级 <code>RATINGAPI</code> &gt; <code>ModerateContentApiKey</code></p>]]></content>
      
      
      <categories>
          
          <category> 白嫖教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 白嫖 </tag>
            
            <tag> 图床 </tag>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给旧手机装个linux后，还能装个啥？比如装一个宝塔面板？</title>
      <link href="/2022/05/10/2022-05-11-phone-linux/"/>
      <url>/2022/05/10/2022-05-11-phone-linux/</url>
      
        <content type="html"><![CDATA[<blockquote><p>上面讲的是如果安装一个linux系统到手机上，图形化使用。这就开始讲讲最简单的方式来配置linux服务器吧！</p></blockquote><h2 id="安装AidLux。"><a href="#安装AidLux。" class="headerlink" title="安装AidLux。"></a>安装<code>AidLux</code>。</h2><p>这个直接在应用商店下载就好了，打开后不用登录直接免登录使用，然后我们点击<code>cloud_ip</code>，打开它，会显示一个网址，在电脑上输入这个网址，就可以远程访问了，直接电脑操作，方便多了！</p><p><img src="https://img.5205230.xyz/file/a2f22920e4ef9dfcafdb8.png" alt="图片"></p><p><img src="https://img.5205230.xyz/file/50d5a4403c7fce1958064.png" alt="图片"></p><p><img src="https://img.5205230.xyz/file/0e9d2de3442d58a282678.png" alt="图片"></p><p><img src="https://img.5205230.xyz/file/899ed6e65ca7a49fb13db.png" alt="图片"></p><p>电脑打开后就是这样子了！</p><p><img src="https://img.5205230.xyz/file/19651d5c77d5a289e15fc.png" alt="图片"></p><p>这个时候，我们就可以把他当作一个正常的服务器来使用了！</p><h2 id="安装一个宝塔软件吧！"><a href="#安装一个宝塔软件吧！" class="headerlink" title="安装一个宝塔软件吧！"></a>安装一个宝塔软件吧！</h2><h3 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt upgrade</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -sSO https://download.bt.cn/install/install_panel.sh;sudo bash install_panel.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x install_panel.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /www</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install_panel.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 /www/server -R</span><br></pre></td></tr></table></figure><p>以上的步骤就是按照宝塔的命令了。最后可能会说启动失败，没关系，接下来继续操作！</p><p><img src="https://img.5205230.xyz/file/5873756b75d5b600c1484.png" alt="图片"></p><h3 id="查看宝塔信息"><a href="#查看宝塔信息" class="headerlink" title="查看宝塔信息"></a>查看宝塔信息</h3><p>输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bt</span><br></pre></td></tr></table></figure><p>就可以看到以下的界面，然后<code>选择1</code>就可以启动了。这里建议后面再<code>选择6和5</code>修改用户名以及密码。</p><p><img src="https://img.5205230.xyz/file/221a83da4afa81344b03c.png" alt="图片"></p><p>最后<code>选择14</code>，查看宝塔面板的默认信息，也就是登录网址，账号密码啥的。</p><p><img src="https://img.5205230.xyz/file/ed2cafc7b910a5e4bce7e.png" alt="图片"></p><p>然后在浏览器打开这个网址，输入用户名密码就可以啦！</p><p><img src="https://img.5205230.xyz/file/c1505e1f7da3edde0b5f1.png" alt="图片"></p><p>有了宝塔面板就方便多了，很多东西都方便安装了！</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旧手机应用 </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【猫盘相关】猫盘ttl刷机教程</title>
      <link href="/2020/05/10/2020-05-10-mp-ttl/"/>
      <url>/2020/05/10/2020-05-10-mp-ttl/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.5205230.xyz/file/e0444d9b6274dee81180f.jpg" alt="封面"></p><h1 id="猫盘的硬件参数："><a href="#猫盘的硬件参数：" class="headerlink" title="猫盘的硬件参数："></a>猫盘的硬件参数：</h1><ol><li>CPU： Marvell A3720 双核 2线程</li><li>内存：512M DDR3</li><li>接口：SATA3.0、TTL引脚、外置USB引脚（不能直接插U盘）</li><li>网口：千兆</li></ol><blockquote><p>除此之外，猫盘虽然体积不大，但是内置的空间是可以容纳一块2.5寸硬盘插在SATA3.0口上的。<br>{: .prompt-warning }</p></blockquote><h1 id="猫盘刷黑群晖："><a href="#猫盘刷黑群晖：" class="headerlink" title="猫盘刷黑群晖："></a>猫盘刷黑群晖：</h1><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><ul><li>1.猫盘一只</li><li>2.TTL 模块及三根杜邦线</li><li>3.USB转杜邦母座</li><li>4.U盘一只（需USB2.0 2-8G即可）</li></ul><h2 id="二、软件准备："><a href="#二、软件准备：" class="headerlink" title="二、软件准备："></a>二、软件准备：</h2><ul><li>1.Xshell6绿色版（本压缩包内已含）</li><li>2.full2.bin（本压缩包内已含）</li></ul><h2 id="三、教程开始"><a href="#三、教程开始" class="headerlink" title="三、教程开始"></a>三、教程开始</h2><h3 id="一、U盘格式化为Fat32格式"><a href="#一、U盘格式化为Fat32格式" class="headerlink" title="一、U盘格式化为Fat32格式"></a>一、U盘格式化为Fat32格式</h3><p>将<code>full2.bin</code>文件，拷贝至U盘中<br><img src="https://img.5205230.xyz/file/5a0404e6e64c57bc827b3.png" alt="拷贝至U盘中"></p><h3 id="二、猫盘-USB母座在插入我们刚刚的U盘"><a href="#二、猫盘-USB母座在插入我们刚刚的U盘" class="headerlink" title="二、猫盘 USB母座在插入我们刚刚的U盘"></a>二、猫盘 USB母座在插入我们刚刚的U盘</h3><blockquote><p>猫盘不要接硬盘，不要插电源.<br>{: .prompt-tip }<br><img src="https://img.5205230.xyz/file/fa6a67243431dcab7dbe2.png" alt="猫盘不要接硬盘"></p></blockquote><h3 id="三、打开Xshell软件"><a href="#三、打开Xshell软件" class="headerlink" title="三、打开Xshell软件"></a>三、打开Xshell软件</h3><ol><li>TTL 模块插在电脑上之后，可以在<code>设备管理器</code>中查看端口。示例中为：<code>COM3</code><br><img src="https://img.5205230.xyz/file/4ef5807fbc44e4247831b.png" alt="猫盘不要接硬盘"></li><li>新建会话，协议选择<code>SERIAL</code>，并在 <code>SERIAL</code> 选项中设置好<code>端口</code>、<code>波特率</code>。<br><img src="https://img.5205230.xyz/file/e18c9d2d966a29956555e.png" alt="猫盘不要接硬盘"></li><li>协议选择：<code>SERIAL</code><br><img src="https://img.5205230.xyz/file/7aaf95b4be790ca5337db.png" alt="猫盘不要接硬盘"></li><li>端口根据实际端口选择、Baud Rate 选择：<code>115200</code><br><img src="https://img.5205230.xyz/file/6ee838021cf663b8b0fa9.png" alt="猫盘不要接硬盘"></li><li>并点击链接Xshell中的会话。等待上电。</li></ol><h3 id="四、猫盘通电"><a href="#四、猫盘通电" class="headerlink" title="四、猫盘通电"></a>四、猫盘通电</h3><p>Xshell显示默认滚动信息的同时，<code>不断按回车</code>打断进入。直至出现 ：<code>Marvell&gt;&gt;</code><br><img src="https://img.5205230.xyz/file/a7b4aae2f72750472dc72.png" alt="猫盘不要接硬盘"></p><h3 id="五、复制以下命令到Xshell-，但不要回车！"><a href="#五、复制以下命令到Xshell-，但不要回车！" class="headerlink" title="五、复制以下命令到Xshell ，但不要回车！"></a>五、复制以下命令到Xshell ，但不要回车！</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loady 0x1000000</span><br></pre></td></tr></table></figure><h3 id="六、文件传输"><a href="#六、文件传输" class="headerlink" title="六、文件传输"></a>六、文件传输</h3><p>点击Xshell的<code>文件</code>-<code>传输</code>-<code>YM ODEM(Y)</code>-<code>用YMODEM发送(S)</code>,然后选择本压缩包内的<code>flash-image.bin</code>上传。参照下图：<br><img src="https://img.5205230.xyz/file/3f5dc2f27c1de3fb03571.png" alt="猫盘不要接硬盘"></p><h3 id="七、Xshell端逐行输入命令"><a href="#七、Xshell端逐行输入命令" class="headerlink" title="七、Xshell端逐行输入命令"></a>七、Xshell端<code>逐行输入命令</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sf probe</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sf probe</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sf erase 0x0 0x800000</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sf write 0x1000000 0x0 0x000d4fc0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sf probe</span><br></pre></td></tr></table></figure><blockquote><p>以上命令一定要等执行完毕再执行下一行<br>{: .prompt-info }</p></blockquote><h3 id="八、重启系统"><a href="#八、重启系统" class="headerlink" title="八、重启系统"></a>八、重启系统</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reset</span><br></pre></td></tr></table></figure><p>回车，让系统重启</p><h3 id="九、重启完毕后"><a href="#九、重启完毕后" class="headerlink" title="九、重启完毕后"></a>九、重启完毕后</h3><p>回车打断。重新进入<code>Marvell&gt;&gt;</code>，并输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bubt full2.bin spi usb</span><br></pre></td></tr></table></figure><p>然后回车。回车之后等待这个命令跑完。即可输入<code>reset</code>重启。直至出现<code>DiskStation login: </code>则表明刷机成功。然后你就可以按照正常的<code>黑群晖</code>安装教程进行后续步骤咯。在此说一下猫盘这个东西是<code>刷不坏</code>的，大胆的c它</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 猫盘 </tag>
            
            <tag> 群辉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7.6当FRP内网穿透服务器</title>
      <link href="/2020/05/10/2022-05-12-FRP/"/>
      <url>/2020/05/10/2022-05-12-FRP/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.5205230.xyz/file/ad54c066d535205932078.jpg" alt="图片"></p><h2 id="安装wget命令"><a href="#安装wget命令" class="headerlink" title="安装wget命令"></a>安装wget命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure><h3 id="1-下载文件："><a href="#1-下载文件：" class="headerlink" title="1.下载文件："></a>1.下载文件：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.49.0/frp_0.49.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="2-文件解压："><a href="#2-文件解压：" class="headerlink" title="2.文件解压："></a>2.文件解压：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf frp_0.49.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>重命名文件夹：frp_0.49.0_linux_amd64为frp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv frp_0.49.0_linux_amd64 frp</span><br></pre></td></tr></table></figure><h3 id="3-修改frps-ini文件："><a href="#3-修改frps-ini文件：" class="headerlink" title="3.修改frps.ini文件："></a>3.修改frps.ini文件：</h3><p>进入frp文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd frp</span><br></pre></td></tr></table></figure><h3 id="4-编辑文件"><a href="#4-编辑文件" class="headerlink" title="4.编辑文件"></a>4.编辑文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi frps.ini</span><br></pre></td></tr></table></figure><p>修改成下面样子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"></span><br><span class="line">bind_port = 7000</span><br><span class="line"></span><br><span class="line">token = 000000</span><br></pre></td></tr></table></figure><p>保存退出</p><ol><li>esc</li><li>输入英文书法发的冒号（:）</li><li>输入：wq</li><li>回车退出</li></ol><h3 id="5-进入frp目录"><a href="#5-进入frp目录" class="headerlink" title="5.进入frp目录"></a>5.进入frp目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd frp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure><h3 id="6-退出FRP服务"><a href="#6-退出FRP服务" class="headerlink" title="6.退出FRP服务"></a>6.退出FRP服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">control+C</span><br></pre></td></tr></table></figure><h3 id="7-设置一个服务"><a href="#7-设置一个服务" class="headerlink" title="7.设置一个服务"></a>7.设置一个服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/frps.service</span><br></pre></td></tr></table></figure><blockquote><p>按 i 进入编辑<br>{: .prompt-tip }</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=fraps Service</span><br><span class="line"></span><br><span class="line">After=network.target syslog.target</span><br><span class="line"></span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"></span><br><span class="line">Type=simple</span><br><span class="line"></span><br><span class="line">ExecStart=/root/frp/frps -c /root/frp/frps.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"></span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>保存，退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><h3 id="8-运行frp"><a href="#8-运行frp" class="headerlink" title="8.运行frp"></a>8.运行frp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start frps</span><br></pre></td></tr></table></figure><h3 id="9-开机启动设置"><a href="#9-开机启动设置" class="headerlink" title="9.开机启动设置"></a>9.开机启动设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable frps</span><br></pre></td></tr></table></figure><h3 id="10-重启"><a href="#10-重启" class="headerlink" title="10.重启"></a>10.重启</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="11-查看运行情况"><a href="#11-查看运行情况" class="headerlink" title="11.查看运行情况"></a>11.查看运行情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps auxw</span><br></pre></td></tr></table></figure><h3 id="12-开放端口，重启防火墙"><a href="#12-开放端口，重启防火墙" class="headerlink" title="12.开放端口，重启防火墙"></a>12.开放端口，重启防火墙</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8020/tcp --permanent</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="13-重启frp进程"><a href="#13-重启frp进程" class="headerlink" title="13.重启frp进程"></a>13.重启frp进程</h3><h4 id="先找到这个进程"><a href="#先找到这个进程" class="headerlink" title="先找到这个进程"></a>先找到这个进程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux|grep frp| grep -v grep</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root 3600  0.1  0.1 110188  9484 pts/0    Sl   15:04   0:00 ./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 3600</span><br></pre></td></tr></table></figure><h4 id="重启frps"><a href="#重启frps" class="headerlink" title="重启frps"></a>重启frps</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart frps</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FRP </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
